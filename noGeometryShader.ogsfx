#version 410

uniform mat4 gWVPXf : WorldViewProjection;
uniform mat4 world : World;
uniform mat4 gWVXf : WorldView;
uniform mat4 gPXf : Projection;

attribute VS_INPUT {
    vec3 inPosition : POSITION;
    vec3 inNormal : NORMAL;
};

attribute VS_TO_PS {
    vec3 vPosition : POSITION;
    vec3 vNormal : NORMAL;
};

attribute PS_OUT {
    vec4 colorOut : COLOR0;
};

uniform float scale = { 1.0 };


GLSLShader ShaderVertex {
    void main() {
        mat4 scaleMat = mat4(scale, 0, 0, 0,
                             0, scale, 0, 0,
                             0, 0, scale, 0,
                             0, 0, 0, 1);

        vs_output.vPosition = normalize(world * vec4(inPosition, 1.0)).xyz;
        vs_output.vNormal = normalize(world * vec4(inNormal, 1.0)).xyz;
        gl_Position = scaleMat * gWVPXf * vec4(inPosition, 1.0);
    }
}

GLSLShader ShaderPixel {
    void main() {
        colorOut = vec4(abs(px_input.vPosition.xyz), 1.0);
    }
}

technique Main {
    pass P0 {
        VertexShader (in VS_INPUT, out VS_TO_PS vs_output) = ShaderVertex;
        PixelShader (in VS_TO_PS px_input, out PS_OUT) = ShaderPixel;
    }
}